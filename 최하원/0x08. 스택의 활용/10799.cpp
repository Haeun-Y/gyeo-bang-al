/*
문제
쇠막대기는 자신보다 긴 쇠막대기 위에만 놓일 수 있다.
쇠막대기를 다른 쇠막대기 위에 놓는 경우 완전히 포함되도록 놓되, 끝점은 겹치지 않도록 놓는다.
각 쇠막대기를 자르는 레이저는 적어도 하나 존재한다.

레이저는 어떤 쇠막대기의 양 끝점과도 겹치지 않는다.

레이저는 여는 괄호와 닫는 괄호의 인접한 쌍 ‘( ) ’ 으로 표현된다. 또한, 모든 ‘( ) ’는 반드시 레이저를 표현한다.
쇠막대기의 왼쪽 끝은 여는 괄호 ‘ ( ’ 로, 오른쪽 끝은 닫힌 괄호 ‘) ’ 로 표현된다.
위 예의 괄호 표현은 그림 위에 주어져 있다.

쇠막대기는 레이저에 의해 몇 개의 조각으로 잘려지는데, 위 예에서 가장 위에 있는 두 개의 쇠막대기는 각각 3개와 2개의 조각으로 잘려지고, 
이와 같은 방식으로 주어진 쇠막대기들은 총 17개의 조각으로 잘려진다.
쇠막대기와 레이저의 배치를 나타내는 괄호 표현이 주어졌을 때, 잘려진 쇠막대기 조각의 총 개수를 구하는 프로그램을 작성하시오.

입력
한 줄에 쇠막대기와 레이저의 배치를 나타내는 괄호 표현이 공백없이 주어진다. 괄호 문자의 개수는 최대 100,000이다.

출력
잘려진 조각의 총 개수를 나타내는 정수를 한 줄에 출력한다.
*/

#include<bits/stdc++.h>
using namespace std;

int main(void) {
	ios::sync_with_stdio(0);
	cin.tie(0);

	string s; int ans = 0;
	cin >> s;
	stack<char> S;
	bool laser = false;
	for (auto c : s) {
		if (c == '(') { // pipe 
			S.push(c);
			laser = false;
		}
		else if (!laser && c == ')') { // 첫번째 ) 는 laser -> pipe 자르면서 ans 값 갱신
			if (!S.empty()) S.pop();
			ans += S.size();
			laser = true;
		}
		else if (laser && c == ')') { // 두번째 ) 부터는 pipe 오른쪽 끝
			ans++;
			if (!S.empty()) S.pop();
		}
	}
	cout << ans;
}